<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">



<title type="text">PYNQer</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="https://xesscorp.github.io/pynqer/docs/_site/feed.xml" />
<link rel="alternate" type="text/html" href="https://xesscorp.github.io/pynqer/docs/_site/" />
<updated>2017-04-08T09:21:21-04:00</updated>
<id>https://xesscorp.github.io/pynqer/docs/_site/</id>
<author>
  <name>XESS Corp.</name>
  <uri>https://xesscorp.github.io/pynqer/docs/_site/</uri>
  <email>pynqer@xess.com</email>
</author>


<entry>
  <title type="html"><![CDATA[PYNQ Setup]]></title>
  <link rel="alternate" type="text/html" href="https://xesscorp.github.io/pynqer/docs/_site/blog/pynq-setup"/>
  <id>https://xesscorp.github.io/pynqer/docs/_site/blog/pynq-setup</id>
  <published>2017-04-04T12:25:39-04:00</published>
  <updated>2017-04-04T12:25:39-04:00</updated>
  <author>
    <name>XESS Corp.</name>
    <uri>https://xesscorp.github.io/pynqer/docs/_site</uri>
    <email>pynqer@xess.com</email>
  </author>
  
  <content type="html">
  
    &lt;p&gt;Every blog like this starts off with a post about setting up the equipment.
This is that post.
Basically, I’m following the instructions given
&lt;a href=&quot;https://pynq.readthedocs.io/en/latest/1_getting_started.html&quot;&gt;here&lt;/a&gt;.
I won’t be saying anything new unless I manage to screw up.&lt;/p&gt;

&lt;p&gt;Every blog post has to have at least one picture, so here’s one
of the PYNQ-Z1 board I received from Patrick Lysaght of Xilinx.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/PYNQ.jpg&quot; width=&quot;800&quot; alt=&quot;A PYNQ board.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Along with the board, I got a bunch of cables and an 8GB μSD card.
It probably contained a preloaded image with the OS and example files
but I didn’t even check.
I just downloaded the &lt;a href=&quot;https://files.digilent.com/Products/PYNQ/pynq_z1_image_2017_02_10.zip&quot;&gt;freshest image&lt;/a&gt;
and reflashed the card using &lt;a href=&quot;https://sourceforge.net/projects/win32diskimager/&quot;&gt;Win32 Disk Imager&lt;/a&gt;.
(Bonus points if you can see what I did wrong here.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/reflash-card-wrong.png&quot; alt=&quot;Reflashing the PYNQ image.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I inserted the programmed μSD card into the PYNQ and set the &lt;code class=&quot;highlighter-rouge&quot;&gt;JP4&lt;/code&gt; jumper to
the &lt;code class=&quot;highlighter-rouge&quot;&gt;SD&lt;/code&gt; setting so the board would boot from it.&lt;/p&gt;

&lt;p&gt;Next, I connected an Ethernet cable directly from the PYNQ to my PC and 
&lt;a href=&quot;http://helpdeskgeek.com/windows-7/bridge-network-connections-in-windows-7/&quot;&gt;bridged the PC Ethernet adapter to the wireless adapter&lt;/a&gt;
that accesses the internet.&lt;/p&gt;

&lt;p&gt;Then I attached a micro-USB cable from my PC to the &lt;code class=&quot;highlighter-rouge&quot;&gt;PROG UART&lt;/code&gt; connector
on the PYNQ.&lt;/p&gt;

&lt;p&gt;Last but not least, I attached the supplied 12V / 3.0A power adapter
to the power jack on the PYNQ, set the shunt on the &lt;code class=&quot;highlighter-rouge&quot;&gt;JP5&lt;/code&gt; jumper to the &lt;code class=&quot;highlighter-rouge&quot;&gt;REG&lt;/code&gt;
position (the upper two pins), &lt;strong&gt;made sure the power switch was in the OFF position&lt;/strong&gt;,
and plugged the adapter into a wall socket.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/pynq-connections.jpg&quot; width=&quot;800&quot; alt=&quot;Connections to the PYNQ.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The moment of truth had arrived: I pushed the power switch to the right and … nothing.
The red power LED came on, but the green &lt;code class=&quot;highlighter-rouge&quot;&gt;DONE&lt;/code&gt; LED (&lt;code class=&quot;highlighter-rouge&quot;&gt;LED12&lt;/code&gt;) midway between the
ZYNQ chip and the Ethernet connector stubbornly stayed off.
That indicated the ZYNQ was not getting configured.
Maybe reflashing that μSD card was a bad idea…&lt;/p&gt;

&lt;p&gt;It turned out it &lt;em&gt;was&lt;/em&gt; a bad idea.
After checking all the connections and powering the board on and off a few times,
I decided to check how I programmed the μSD card.
If you look at the Win32 Disk Imager screen above, you’ll see &lt;em&gt;I programmed
the card with the ZIP file instead of the &lt;code class=&quot;highlighter-rouge&quot;&gt;.img&lt;/code&gt; file it contained!&lt;/em&gt;
Doh!
Unpacking the ZIP file and re-reflashing the card with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.img&lt;/code&gt; file fixed that error:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/reflash-card-right.png&quot; alt=&quot;Re-reflashing the PYNQ image.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After replacing the corrected μSD card in the PYNQ and applying power, the &lt;code class=&quot;highlighter-rouge&quot;&gt;DONE&lt;/code&gt; LED
comes on and (after a small delay) the &lt;code class=&quot;highlighter-rouge&quot;&gt;LD0 - LD5&lt;/code&gt; LEDs flash on-and-off eight or nine times.
That means the ZYNQ has configured correctly, booted the OS, and established communications
so it’s ready to talk to me.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/pynq-ready.png&quot; width=&quot;800&quot; alt=&quot;LED pattern for properly initialized PYNQ.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Or maybe not:
when I tried to communicate with the board using a browser and either
&lt;code class=&quot;highlighter-rouge&quot;&gt;http://pynq:9090&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;http://192.168.2.99:9090&lt;/code&gt; as the address, I got
the dreaded message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/unreachable-pynq.png&quot; width=&quot;800&quot; alt=&quot;The PYNQ was unreachable through the browser.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried a bunch of variations on the addresses and nothing worked.
Eventually it occurred to me that, since I was using a direct connection to the
board without an intervening router running DHCP, I needed to adjust the IP address of
my PC’s Ethernet port to match the PYNQ’s subnet (192.168.2):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/setting-ethernet-IPV4.png&quot; alt=&quot;Setting the PC Ethernet port IPV4 address to match the PYNQ.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But even that didn’t fix the problem.
Finally, I removed the bridge between the PC’s Ethernet port and its wireless adapter.
With that, I was able to login using the hard-coded IPV4 address of the PYNQ:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/hard-coded-login.png&quot; alt=&quot;Logging into the PYNQ using its hard-coded IPV4 address.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, the PYNQ couldn’t reach the internet in this configuration,
and I wanted to be able to easily download new software to it.
I went back and tried Internet Connection Sharing (ICS) but it complained
it needed to occupy the 192.168.0.1 address and that’s where my wireless router sits.
Therefore, I moved the router to the 192.168.1.x subnet and ICS still couldn’t
get packets from the PYNQ to the internet and back.
So I ditched ICS and tried to go old school and modify the routing tables
on my PC and wireless router (without much success).
Then I moved my entire network to the 192.168.2.x subnet to match up with the
subnet used by the PYNQ.
That actually worked, but it seemed like a pretty janky setup that might cause
other problems down the road.&lt;/p&gt;

&lt;p&gt;Admitting defeat, I dug out an old travel WiFi router, configured it as a client-mode
device, and used it to connect the PYNQ to my wireless network.
Then all my devices could see it and the PYNQ could get onto the internet.
I could also remove the direct Ethernet connection and pack everything
into a small space with short cords I’d be less likely to snag:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/final-pynq-setup.png&quot; alt=&quot;PYNQ with WiFi connection, USB connection, and power adapter.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With this arrangement, the PYNQ is accessible from anywhere within reach of my WiFi and I
can download things like new Python modules for it from the internet:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://xesscorp.github.io/pynqer/docs/_site/images/pynq-setup/pynq-downloading.png&quot; alt=&quot;PYNQ downloading a Python module.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now it’s on to the serious play of making the PYNQ do stuff.&lt;/p&gt;

  
  &lt;p&gt;&lt;a href=&quot;https://xesscorp.github.io/pynqer/docs/_site/blog/pynq-setup&quot;&gt;PYNQ Setup&lt;/a&gt; was originally published by XESS Corp. at &lt;a href=&quot;https://xesscorp.github.io/pynqer/docs/_site&quot;&gt;PYNQer&lt;/a&gt; on April 04, 2017.&lt;/p&gt;</content>
</entry>

</feed>
